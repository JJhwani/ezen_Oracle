--2022/11/09
--2022/11/08에 이어서
--6번 문제 : JOBS 테이블에서 MAX_SALARY 값의 최소값과 최대값을 조회
SELECT MIN(MAX_SALARY), MAX(MAX_SALARY) FROM JOBS;

--7번 문제 : JOBS 테이블에서 JOB_TITLE이 'PROGRAMMER'인 직업의 MAX_SALARY 값의
--최소값과 최대값을 조회
SELECT JOB_TITLE, MIN(MAX_SALARY), MAX(MAX_SALARY) FROM JOBS
    WHERE JOB_TITLE='Programmer'
    GROUP BY JOB_TITLE;

--8번 문제 : EMPLOYEES 테이블에서 DEPARTMENT_ID가 100인 데이터의 FIRST_NAME,
--SALARY의 분산값을 HIRE_DATE 정렬 기준으로 조회
SELECT FIRST_NAME, SALARY, VARIANCE(SALARY) FROM EMPLOYEES 
    WHERE DEPARTMENT_ID=100
    GROUP BY SALARY, FIRST_NAME, HIRE_DATE
    ORDER BY HIRE_DATE;

SELECT FIRST_NAME, SALARY, VARIANCE(SALARY) OVER (ORDER BY HIRE_DATE)
    FROM EMPLOYEES WHERE DEPARTMENT_ID=100;

SELECT HIRE_DATE, FIRST_NAME, SALARY, VARIANCE(SALARY) OVER (ORDER BY HIRE_DATE)
    FROM EMPLOYEES WHERE DEPARTMENT_ID=100;

--9번 문제 : EMPLOYEES 테이블에서 HIRE_DATE값이 2004년 1월1일부터
--2006년 12월31일 사이의 데이터를 JOB_ID기준으로 그룹화한 뒤에 JOB_ID와
--SALARY 최소값과 최대값을 조회
SELECT JOB_ID, MIN(SALARY), MAX(SALARY) FROM EMPLOYEES
    WHERE HIRE_DATE BETWEEN '04/01/01' AND '06/12/31'
    GROUP BY JOB_ID;

--10번 문제 : EMPLOYEES 테이블에서 DEPARTMENT_ID가 50과 80인 데이터를
--DEPARTMENT_ID와 JOB_ID기준으로 그룹화한 뒤에 DEPARTMENT_ID와 JOB_ID,
--SALRAY 합계, 최소값, 최대값을 JOB_ID 기준으로 정렬하여 조회
SELECT DEPARTMENT_ID, JOB_ID, SUM(SALARY), MIN(SALARY), MAX(SALARY)
    FROM EMPLOYEES
    WHERE DEPARTMENT_ID IN(50,80)
    GROUP BY DEPARTMENT_ID, JOB_ID
    ORDER BY JOB_ID;
    
--11번 문제 : EMPLOYEES 테이블에서 DEPARTMENT_ID와 JOB_ID 기준으로 그룹화한 뒤
--SALARY 평균값이 12000 이상인 데이터만 DEPARTMENT_ID와 JOB_ID, SALARY 최소값,
--최대값, 평균을 DEPARTMENT_ID 기중으로 정렬하여 조회
SELECT DEPARTMENT_ID, JOB_ID, MIN(SALARY), MAX(SALARY), TRUNC(AVG(SALARY),2)
    FROM EMPLOYEES
    GROUP BY DEPARTMENT_ID, JOB_ID
    HAVING AVG(SALARY)>=12000
    ORDER BY DEPARTMENT_ID;